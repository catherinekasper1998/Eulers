import java.lang.Number;
import java.math.BigInteger;
import java.util.ArrayList;

/**
 * Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
 * 
 * 22=4, 23=8, 24=16, 25=32
 * 32=9, 33=27, 34=81, 35=243
 * 42=16, 43=64, 44=256, 45=1024
 * 52=25, 53=125, 54=625, 55=3125
 * 
 * If they are then placed in numerical order, with any repeats removed, 
 * we get the following sequence of 15 distinct terms:
 * 
 * 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
 * 
 * How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
 * 
 * @author Grace Kasper
 * @version Start: 21 February 2017 End: 21 February 2017
 */
public class Euler29
{
    public static int main (int stop)
    {
        ArrayList<BigInteger> arr = new ArrayList<BigInteger>();
        BigInteger num = new BigInteger("1");
        boolean nonExists = true;
        for(BigInteger base = BigInteger.valueOf(2); base.compareTo(BigInteger.valueOf(stop))<=0; base = base.add(BigInteger.ONE))
        {
            for(int exponent = 2; exponent<=stop; exponent++)
            {
                num = base.pow(exponent);
                for(int i = 0; i<arr.size(); i++)
                {
                    if(num.compareTo(arr.get(i))==0)
                    {
                        nonExists = false;
                        i = arr.size();
                    }
                }
                
                if(nonExists)
                    arr.add(num);
                    
                System.out.println("Base: " + base + " Exponent: " + exponent + " Num: " + num);
                System.out.println("Size: " + arr.size());
                
                nonExists = true;
               
            }
        }
        System.out.println(arr.size());
        return arr.size();
    }
}
